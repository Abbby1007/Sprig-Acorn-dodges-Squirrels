/*
First time? Check out the tutorial game:
https://sprig.hackclub.com/gallery/getting_started

@title: Acorn dodges Squirrel
@author: 
@tags: []
@addedOn: 2024-00-00
*/

const obstacle = "o" // obstacle is squirrel
const player = "p" // player is acorn


setLegend(
  [ obstacle, bitmap`
................
................
................
...CCC..........
..C0CC.......CCC
.CCCCC.......CCC
....1CC......CCC
....1CCC.....CCC
...CCCCCC....CCC
.....111C...CCCC
......111C.CCC..
.......11CCCC...
.......CCCC.....
................
................
................` ], // sprite of the squirrel obstacle
  [player, bitmap`
................
................
.......CC.......
....CCCCCCCC....
..CCCCCCCCCCCC..
.CCCCCCCCCCCCCC.
.CCCCCCCCCCCCCC.
.CCCCCCCCCCCCCC.
..999999999999..
..999999999999..
..999999999999..
..999999999999..
..999999999999..
...9999999999...
....99999999....
.....999999.....`], // sprite of the acorn player
)

const melody = tune `
461.53846153846155: C4~461.53846153846155 + E4^461.53846153846155 + G4-461.53846153846155 + C5/461.53846153846155,
461.53846153846155: G4-461.53846153846155 + D5~461.53846153846155,
461.53846153846155: E4-461.53846153846155 + B4~461.53846153846155 + F4/461.53846153846155 + F5/461.53846153846155,
461.53846153846155: C4~461.53846153846155 + E4~461.53846153846155 + G4~461.53846153846155 + C5~461.53846153846155 + A4^461.53846153846155,
461.53846153846155: E5^461.53846153846155 + D4^461.53846153846155,
461.53846153846155: G4^461.53846153846155 + C5^461.53846153846155 + D4/461.53846153846155 + A4/461.53846153846155,
461.53846153846155: C4-461.53846153846155 + E4-461.53846153846155 + G4-461.53846153846155 + B4-461.53846153846155 + D5/461.53846153846155,
461.53846153846155: C5-461.53846153846155 + E5-461.53846153846155,
461.53846153846155: B4/461.53846153846155 + D5/461.53846153846155 + F4~461.53846153846155 + G4~461.53846153846155,
461.53846153846155: C4-461.53846153846155 + E4-461.53846153846155 + B4^461.53846153846155 + F5^461.53846153846155,
461.53846153846155: B4-461.53846153846155 + A4-461.53846153846155 + D4/461.53846153846155 + F4/461.53846153846155,
461.53846153846155: D5/461.53846153846155 + B4~461.53846153846155 + G4~461.53846153846155 + D4^461.53846153846155,
461.53846153846155: B4^461.53846153846155 + D4^461.53846153846155 + E4-461.53846153846155 + G4/461.53846153846155 + F5/461.53846153846155,
461.53846153846155: F4^461.53846153846155 + A4-461.53846153846155 + C5-461.53846153846155 + E5-461.53846153846155 + A5/461.53846153846155,
461.53846153846155: C4^461.53846153846155 + D4^461.53846153846155 + G4^461.53846153846155 + C5^461.53846153846155 + E4-461.53846153846155,
461.53846153846155: D4^461.53846153846155 + C5~461.53846153846155 + E5~461.53846153846155 + G5^461.53846153846155 + A4/461.53846153846155,
461.53846153846155: E4-461.53846153846155 + A4-461.53846153846155 + E5^461.53846153846155 + G5~461.53846153846155 + B4/461.53846153846155,
461.53846153846155: D4/461.53846153846155 + G4-461.53846153846155 + C5-461.53846153846155 + A4~461.53846153846155 + E5~461.53846153846155,
461.53846153846155: D5^461.53846153846155 + G5^461.53846153846155 + F4-461.53846153846155 + A4-461.53846153846155,
461.53846153846155: G4^461.53846153846155 + B4/461.53846153846155 + E4/461.53846153846155 + E5^461.53846153846155,
461.53846153846155: C5/461.53846153846155 + F4/461.53846153846155 + C4^461.53846153846155 + D4^461.53846153846155 + A4^461.53846153846155,
461.53846153846155: E5/461.53846153846155 + G4~461.53846153846155 + A4~461.53846153846155 + D5~461.53846153846155 + D4~461.53846153846155,
461.53846153846155: E4~461.53846153846155,
461.53846153846155: F4^461.53846153846155 + A4^461.53846153846155 + F5-461.53846153846155 + D5-461.53846153846155 + E4~461.53846153846155,
461.53846153846155: C5^461.53846153846155 + C4~461.53846153846155 + E4~461.53846153846155 + A4^461.53846153846155,
461.53846153846155: C4^461.53846153846155 + E4^461.53846153846155 + F5-461.53846153846155 + B4-461.53846153846155 + D5~461.53846153846155,
461.53846153846155: B4^461.53846153846155 + E5~461.53846153846155 + F4~461.53846153846155 + A4^461.53846153846155 + D4^461.53846153846155,
461.53846153846155: E4-461.53846153846155 + G4-461.53846153846155 + A4-461.53846153846155 + D5-461.53846153846155 + G5~461.53846153846155,
461.53846153846155: C4-461.53846153846155 + F5~461.53846153846155 + C5~461.53846153846155 + G4~461.53846153846155 + E4/461.53846153846155,
461.53846153846155: F4-461.53846153846155 + B4~461.53846153846155 + C5~461.53846153846155 + D4/461.53846153846155 + G4/461.53846153846155,
461.53846153846155: F4~461.53846153846155 + A4~461.53846153846155 + F5~461.53846153846155 + C5/461.53846153846155 + D4^461.53846153846155,
461.53846153846155: E4~461.53846153846155 + B4~461.53846153846155 + F4^461.53846153846155 + C5^461.53846153846155`;

playTune(melody, Infinity);
setSolids([])

setMap(map`
........
........
........
........
........
........
........
...p....`);

var gameRunning = true;
 
onInput("a", () => {
  if (gameRunning) {
    getFirst(player).x -= 1; // acorn moves left
  }
});
 
onInput("d", () => {
  if (gameRunning) {
    getFirst(player).x += 1; // acorn moves right
  }
});
 
function spawnObstacle() {
  let x = Math.floor(Math.random() * 8);
  let y = 0;
  addSprite(x, y, obstacle);
}
 
function moveObstacles() {
  let obstacles = getAll(obstacle);
 
  for (let i = 0; i < obstacles.length; i++) {
    obstacles[i].y += 1;
  }
}
 
function despawnObstacles() {
  let obstacles = getAll(obstacle);
 
  for (let i = 0; i < obstacles.length; i++) {
   if (obstacles[i].y == 7) {
     obstacles[i].remove();
   }
  }
}
 
function checkHit() {
  let obstacles = getAll(obstacle);
  let p = getFirst(player);
 
  for (let i = 0; i < obstacles.length; i++) {
    if (obstacles[i].x == p.x && obstacles[i].y == p.y) {
      return true;
    }
  }
 
  return false;
}
var gameLoop = setInterval(() => {
  despawnObstacles();
  moveObstacles();
  spawnObstacle();
 
  if (checkHit()) {
    clearInterval(gameLoop);
    gameRunning = false;
    addText("Game Over!", {
      x: 5,
      y: 6,
      color: color`3`
    });
  }
 
}, 1000);